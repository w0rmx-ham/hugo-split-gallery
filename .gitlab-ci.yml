image: alpine:edge

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  HUGO_REFERENCE_VERSION: "0.115.4"

build-latest:
  stage: build
  script: |
    apk update
    apk add hugo
    hugo version
    cd exampleSite
    hugo --config .config.ci.toml 2>&1 | tee build.log
    if grep -q 'WARN' build.log; then
      echo "Failed because of the following warnings:"
      grep 'WARN' build.log
      exit 1
    fi
    hugo --config .config.ci-next.toml 2>&1 | tee build-next.log
    if grep -q 'WARN' build-next.log; then
      echo "Failed because of the following warnings:"
      grep 'WARN' build-next.log
      exit 1
    fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"

build-previous:
  stage: build
  # Old versions seems not to be available on Alpine packages, so revert to the good old method
  parallel:
    matrix:
      - VERSION:
        - "0.125.7"
        - "0.115.4"
        - "0.112.7"
        - "0.100.2"
        - "0.83.1"
        - "0.73.0"
  script: |
    wget https://github.com/gohugoio/hugo/releases/download/v${VERSION}/hugo_${VERSION}_Linux-64bit.tar.gz
    mkdir -p bin
    cd bin
    tar -xzf $CI_PROJECT_DIR/hugo_${VERSION}_Linux-64bit.tar.gz
    export PATH=$PATH:${CI_PROJECT_DIR}/bin
    cd ${CI_PROJECT_DIR}/exampleSite
    hugo version
    hugo --config .config.ci.toml 2>&1 | tee build.log
    if grep -q 'WARN' build.log; then
      echo "Failed because of the following warnings:"
      grep 'WARN' build.log
      exit 1
    fi
    hugo --config .config.ci-next.toml 2>&1 | tee build-next.log
    if grep -q 'WARN' build-next.log; then
      echo "Failed because of the following warnings:"
      grep 'WARN' build-next.log
      exit 1
    fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test:
  stage: test
  image:
    name: testcafe/testcafe
    entrypoint: ["/bin/sh", "-c"]
  script: |
    wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_REFERENCE_VERSION}/hugo_${HUGO_REFERENCE_VERSION}_Linux-64bit.tar.gz
    mkdir -p bin
    cd bin
    tar -xzf $CI_PROJECT_DIR/hugo_${HUGO_REFERENCE_VERSION}_Linux-64bit.tar.gz
    export PATH=$PATH:${CI_PROJECT_DIR}/bin
    cd ${CI_PROJECT_DIR}

    hugo version
    cd ${CI_PROJECT_DIR}/exampleSite
    hugo --config .config.ci.toml
    cd ${CI_PROJECT_DIR}

    /opt/testcafe/docker/testcafe-docker.sh firefox:headless ./test/**/** --app "cd ${CI_PROJECT_DIR}/exampleSite && hugo server -p 8080 --bind 0.0.0.0 --config .config.ci.toml --disableLiveReload --renderToDisk --watch=false"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"

pages:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
      variables:
        DEPLOY_URL: $CI_PAGES_URL
        HUGOCONFIG: .config.ci.toml
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "next"
      variables:
        DEPLOY_URL: $CI_PAGES_URL/next
        HUGOCONFIG: .config.ci-next.toml
  cache:
    key: gitlab-pages
    paths: [public]
  environment:
    name: pages/$CI_COMMIT_BRANCH
    action: start
    url: $DEPLOY_URL
  script: |
    echo "Preparing Hugo"
    apk update
    apk add hugo
    hugo version
    cd ${CI_PROJECT_DIR}/exampleSite

    echo "Generating site..."
    hugo --config $HUGOCONFIG
  artifacts:
    paths:
      - public
